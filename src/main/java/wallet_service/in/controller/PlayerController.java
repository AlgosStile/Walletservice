package wallet_service.in.controller;

import wallet_service.in.service.PlayerService;
import wallet_service.in.model.Action;
import wallet_service.in.service.PlayerServiceImpl;


import java.sql.SQLException;
import java.util.List;


public class PlayerController {
    private final PlayerService playerService;


//    public PlayerController(PlayerService playerService) {
//        this.playerService = playerService;
//    }
    public PlayerController(PlayerService playerService) throws SQLException {

        this.playerService = new PlayerServiceImpl();
    }


    public void registerPlayer(String username, String password) {
        try {
            playerService.registerPlayer(username, password);
            System.out.println("–ò–≥—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω üòÄ");
        } catch (Exception e) {
            System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " + e.getMessage() + " üòû");
        }
    }



    public void authenticatePlayer(String username, String password) throws SQLException {
        boolean isAuthenticated = playerService.authenticatePlayer(username, password);

        if (isAuthenticated) {
            System.out.println("–ò–≥—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!");
        } else {
            System.out.println("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å");
        }
    }


    public void getBalance(String username) throws SQLException {
        double balance = 0;
        if (playerService.isUserRegistered(username) && playerService.isUserAuthenticated(username)) {
            balance = playerService.getBalance(username);
            System.out.println("–ë–∞–ª–∞–Ω—Å: " + balance);
        } else {
            System.out.println("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ! –í–≤–µ–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.");
        }
    }


    public void logoutPlayer(String username) {
        // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ logout –∏–∑ –æ–±—ä–µ–∫—Ç–∞ playerService –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
        playerService.logout(username);
    }


    public List<Action> getPlayerActions(String username) {
        return playerService.getPlayerActions(username);
    }
}